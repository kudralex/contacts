import { ProposalChooserLayoutResetter, Table } from '../../../index';
/**
 * This class is used to reset and restore styles in the DOM, so we can measure the preferred size of the table.
 */
export declare class TableLayoutResetter implements ProposalChooserLayoutResetter {
    cssSelector: string;
    protected _table: Table;
    protected _fillerWidth: string;
    constructor(table: Table);
    /**
     * Modifies the table in a way that the preferred width may be read.
     * Removes explicit widths on rows, cells, fillers and sets display to inline-block.
     */
    modifyDom(): void;
    restoreDom(): void;
    /**
     * Clears the given CSS property and stores the old value as data with prefix 'backup'
     * which is used to restore the CSS property later.
     */
    protected _cssBackup($element: JQuery, property: string): void;
    protected _cssRestore($element: JQuery, property: string): void;
    /**
     * Go through all rows and cells and call the given modifyFunc (backup/restore) on each element.
     */
    protected _modifyTableData(modifyFunc: ($element: JQuery, property: string) => void): void;
    protected _modifyFiller($filler: JQuery): void;
    protected _restoreFiller($filler: JQuery): void;
}
//# sourceMappingURL=TableLayoutResetter.d.ts.map