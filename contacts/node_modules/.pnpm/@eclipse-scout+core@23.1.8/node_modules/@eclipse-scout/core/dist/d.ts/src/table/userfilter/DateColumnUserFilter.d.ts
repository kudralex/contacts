/// <reference types="jquery" />
import { ColumnUserFilter, ColumnUserFilterModel, DateColumn, DateColumnUserFilterModel, DateField, FilterFieldsGroupBox, InitModelOf, PropertyChangeEvent, TableMatrixDateGroup, TableMatrixNumberGroup, TableRow, TableUserFilterAddedEventData } from '../../index';
export declare class DateColumnUserFilter extends ColumnUserFilter implements ColumnUserFilterModel {
    model: DateColumnUserFilterModel;
    column: DateColumn;
    dateFrom: Date;
    dateTo: Date;
    dateFromField: DateField;
    dateToField: DateField;
    constructor();
    protected _init(model: InitModelOf<this>): void;
    axisGroup(): TableMatrixNumberGroup | TableMatrixDateGroup;
    createFilterAddedEventData(): TableUserFilterAddedEventData;
    fieldsFilterActive(): boolean;
    acceptByFields(key: Date, normKey?: number | string, row?: TableRow): boolean;
    filterFieldsTitle(): string;
    addFilterFields(groupBox: FilterFieldsGroupBox): void;
    protected _onPropertyChange(event: PropertyChangeEvent<any, DateField>): void;
    modifyFilterFields(): void;
    protected _onInput(event: JQuery.TriggeredEvent): void;
}
//# sourceMappingURL=DateColumnUserFilter.d.ts.map