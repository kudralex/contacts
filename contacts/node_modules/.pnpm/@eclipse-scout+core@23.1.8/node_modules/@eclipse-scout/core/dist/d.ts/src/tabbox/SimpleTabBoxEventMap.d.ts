import { Event, SimpleTabBox, SimpleTabView, WidgetEventMap } from '../index';
export interface SimpleTabBoxViewActivateEvent<TView extends SimpleTabView = SimpleTabView, S extends SimpleTabBox<TView> = SimpleTabBox<TView>> extends Event<S> {
    view: TView;
}
export interface SimpleTabBoxViewAddEvent<TView extends SimpleTabView = SimpleTabView, S extends SimpleTabBox<TView> = SimpleTabBox<TView>> extends Event<S> {
    view: TView;
    siblingView: TView;
}
export interface SimpleTabBoxViewDeactivateEvent<TView extends SimpleTabView = SimpleTabView, S extends SimpleTabBox<TView> = SimpleTabBox<TView>> extends Event<S> {
    view: TView;
}
export interface SimpleTabBoxViewRemoveEvent<TView extends SimpleTabView = SimpleTabView, S extends SimpleTabBox<TView> = SimpleTabBox<TView>> extends Event<S> {
    view: TView;
}
export interface SimpleTabBoxEventMap<TView extends SimpleTabView = SimpleTabView> extends WidgetEventMap {
    'viewActivate': SimpleTabBoxViewActivateEvent<TView>;
    'viewAdd': SimpleTabBoxViewAddEvent<TView>;
    'viewDeactivate': SimpleTabBoxViewDeactivateEvent<TView>;
    'viewRemove': SimpleTabBoxViewRemoveEvent<TView>;
}
//# sourceMappingURL=SimpleTabBoxEventMap.d.ts.map