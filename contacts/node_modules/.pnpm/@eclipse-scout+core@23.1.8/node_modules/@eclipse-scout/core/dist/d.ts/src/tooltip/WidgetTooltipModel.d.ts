import { FocusRule, ObjectOrChildModel, ScoutKeyboardEvent, TooltipModel, Widget } from '../index';
export interface WidgetTooltipModel extends TooltipModel {
    /**
     * The default interceptor stops the propagation for all keystrokes except ESCAPE and ENTER.
     * Otherwise, the tooltip would be destroyed for all keystrokes that bubble up to the
     * root (see global document listener in {@link Tooltip}).
     */
    keyStrokeStopPropagationInterceptor?: (event: ScoutKeyboardEvent) => void;
    /**
     * Default is true.
     */
    withFocusContext?: boolean;
    /**
     * Default returns {@link FocusRule.AUTO}.
     */
    initialFocus?: () => FocusRule;
    /**
     * Default is false.
     */
    focusableContainer?: boolean;
    /**
     * The {@link Widget} rendered inside the tooltip.
     */
    content?: ObjectOrChildModel<Widget>;
}
//# sourceMappingURL=WidgetTooltipModel.d.ts.map