import { Event, FormField, LogicalGridLayoutConfig, LookupCall, LookupResult, PropertyChangeEvent, RadioButton, RadioButtonGroup, Status, ValueFieldEventMap } from '../../../index';
export interface RadioButtonGroupLookupCallDoneEvent<TValue, T = RadioButtonGroup<TValue>> extends Event<T> {
    result: LookupResult<TValue>;
}
export interface RadioButtonGroupPrepareLookupCallEvent<TValue, T = RadioButtonGroup<TValue>> extends Event<T> {
    lookupCall: LookupCall<TValue>;
}
export interface RadioButtonGroupEventMap<TValue> extends ValueFieldEventMap<TValue> {
    'lookupCallDone': RadioButtonGroupLookupCallDoneEvent<TValue>;
    'prepareLookupCall': RadioButtonGroupPrepareLookupCallEvent<TValue>;
    'propertyChange:fields': PropertyChangeEvent<FormField[]>;
    'propertyChange:gridColumnCount': PropertyChangeEvent<number>;
    'propertyChange:layoutConfig': PropertyChangeEvent<LogicalGridLayoutConfig>;
    'propertyChange:lookupCall': PropertyChangeEvent<LookupCall<TValue>>;
    'propertyChange:lookupStatus': PropertyChangeEvent<Status>;
    'propertyChange:selectedButton': PropertyChangeEvent<RadioButton<TValue>>;
}
//# sourceMappingURL=RadioButtonGroupEventMap.d.ts.map