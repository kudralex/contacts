import { CellModel, InitModelOf, Status, ValueField } from '../index';
/**
 * -1 for left, 0 for center and 1 for right.
 */
export type Alignment = -1 | 0 | 1;
export declare class Cell<TValue = any> implements CellModel<TValue> {
    model: CellModel<TValue>;
    cssClass: string;
    editable: boolean;
    errorStatus: Status;
    horizontalAlignment: Alignment;
    htmlEnabled: boolean;
    iconId: string;
    mandatory: boolean;
    text: string;
    flowsLeft: boolean;
    empty: boolean;
    value: TValue;
    tooltipText: string;
    foregroundColor: string;
    backgroundColor: string;
    font: string;
    sortCode: number;
    field: ValueField<TValue>;
    protected _cachedEncodedText: string;
    constructor();
    init(model: InitModelOf<this>): void;
    protected _init(model: InitModelOf<this>): void;
    update(model: CellModel<TValue>): void;
    setEditable(editable: boolean): void;
    setMandatory(mandatory: boolean): void;
    setHorizontalAlignment(hAlign: Alignment): void;
    setValue(value: TValue): void;
    setErrorStatus(errorStatus: Status): void;
    setText(text: string): void;
    setIconId(iconId: string): void;
    encodedText(): string;
    setCssClass(cssClass: string): void;
    setSortCode(sortCode: number): void;
}
//# sourceMappingURL=Cell.d.ts.map