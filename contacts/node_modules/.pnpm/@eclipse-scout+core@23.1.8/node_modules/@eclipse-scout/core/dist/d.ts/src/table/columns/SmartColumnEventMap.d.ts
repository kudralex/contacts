import { ColumnEventMap, Event, LookupCall, LookupResult, PropertyChangeEvent, SmartColumn, TableRow } from '../../index';
export interface SmartColumnCallDoneEvent<TValue = any, S extends SmartColumn<TValue> = SmartColumn<TValue>> extends Event<S> {
    result: LookupResult<TValue>;
}
export interface SmartColumnPrepareLookupCallEvent<TValue = any, S extends SmartColumn<TValue> = SmartColumn<TValue>> extends Event<S> {
    lookupCall: LookupCall<TValue>;
    row?: TableRow;
}
export interface SmartColumnEventMap<TValue> extends ColumnEventMap {
    'lookupCallDone': SmartColumnCallDoneEvent<TValue>;
    'prepareLookupCall': SmartColumnPrepareLookupCallEvent<TValue>;
    'propertyChange:activeFilterEnabled': PropertyChangeEvent<boolean>;
    'propertyChange:browseAutoExpandAll': PropertyChangeEvent<boolean>;
    'propertyChange:browseHierarchy': PropertyChangeEvent<boolean>;
    'propertyChange:browseLoadIncremental': PropertyChangeEvent<boolean>;
    'propertyChange:browseMaxRowCount': PropertyChangeEvent<number>;
    'propertyChange:codeType': PropertyChangeEvent<string>;
    'propertyChange:lookupCall': PropertyChangeEvent<LookupCall<any>>;
}
//# sourceMappingURL=SmartColumnEventMap.d.ts.map