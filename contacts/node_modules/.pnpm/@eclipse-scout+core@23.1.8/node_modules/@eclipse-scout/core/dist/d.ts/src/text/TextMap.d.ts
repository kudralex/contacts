export declare class TextMap {
    map: Record<string, string>;
    parent: TextMap;
    constructor(textMap?: Record<string, string>);
    static TEXT_KEY_REGEX: RegExp;
    /**
     * Returns the text for the given key.
     * If the key does not exist in this text map, a lookup in the parent text map is done.
     *
     * @param textKey key to lookup the text
     * @param vararg texts to replace the placeholders specified by {0}, {1}, etc.
     */
    get(textKey: string, ...vararg: any[]): string;
    optGet(textKey: string, defaultValue?: string, ...vararg: string[]): string;
    exists(textKey: string): boolean;
    protected _exists(textKey: string): boolean;
    add(textKey: string, text: string): void;
    /**
     * Adds all texts from the given textMap to this textMap
     * @param textMap either a plain object or a {@link TextMap}
     */
    addAll(textMap: Record<string, string> | TextMap): void;
    setParent(parent: TextMap): void;
    remove(textKey: string): void;
}
//# sourceMappingURL=TextMap.d.ts.map