/// <reference types="jquery" />
import { Event, EventHandler, EventListener, EventMapOf, Form, HybridManagerEventMap, InitModelOf, ObjectOrChildModel, Session, Widget } from '../../index';
export declare class HybridManager extends Widget {
    eventMap: HybridManagerEventMap;
    self: HybridManager;
    widgets: Record<string, Widget>;
    constructor();
    static get(session: Session): HybridManager;
    protected _init(model: InitModelOf<this>): void;
    protected _setWidgets(widgets: Record<string, ObjectOrChildModel<Widget>>): void;
    protected _ensureWidgets(modelsOrWidgets: Record<string, ObjectOrChildModel<Widget>>): Record<string, Widget>;
    protected _triggerWidgetAdd(id: string, widget: Widget): void;
    protected _triggerWidgetRemove(id: string, widget: Widget): void;
    /** @internal */
    onHybridEvent(id: string, eventType: string, data: object): void;
    /** @internal */
    onHybridWidgetEvent(id: string, eventType: string, data: object): void;
    _onHybridWidgetEvent(widget: Widget, eventType: string, data: object): void;
    _onHybridFormEvent(form: Form, eventType: string, data: object): void;
    protected _createEventId(): string;
    /**
     * @returns the id of the triggered hybrid action
     */
    triggerHybridAction(eventType: string, data?: object): string;
    triggerHybridActionAndWait(eventType: string, data?: object): Promise<object>;
    openForm(modelVariant: string, data?: object): Promise<Form>;
    createForm(modelVariant: string, data?: object): Promise<Form>;
    one<K extends string & keyof EventMapOf<this['self']>>(type: K | `${K}:${string}`, handler: EventHandler<EventMapOf<this>[K] & Event<this>>): void;
    on<K extends string & keyof EventMapOf<this['self']>>(type: K | `${K}:${string}`, handler: EventHandler<EventMapOf<this>[K] & Event<this>>): EventListener;
    off<K extends string & keyof EventMapOf<this['self']>>(type: K | `${K}:${string}`, handler?: EventHandler<EventMapOf<this>[K] & Event<this>>): void;
    when<K extends string & keyof EventMapOf<this['self']>>(type: K | `${K}:${string}`): JQuery.Promise<EventMapOf<this>[K] & Event<this>>;
}
//# sourceMappingURL=HybridManager.d.ts.map