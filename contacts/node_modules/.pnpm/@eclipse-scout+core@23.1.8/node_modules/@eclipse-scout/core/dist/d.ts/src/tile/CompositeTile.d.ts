import { ObjectOrChildModel, PropertyChangeEvent, Tile, TileEventMap, TileModel, Widget } from '../index';
export interface CompositeTileModel extends TileModel {
    widgets?: ObjectOrChildModel<Widget>[];
}
export interface CompositeTileEventMap extends TileEventMap {
    'propertyChange:widgets': PropertyChangeEvent<Widget[], CompositeTile>;
}
export declare class CompositeTile extends Tile implements CompositeTileModel {
    model: CompositeTileModel;
    eventMap: CompositeTileEventMap;
    self: CompositeTile;
    widgets: Widget[];
    constructor();
    protected _render(): void;
    protected _renderProperties(): void;
    setWidgets(widgets: ObjectOrChildModel<Widget>[]): void;
    protected _renderWidgets(): void;
}
//# sourceMappingURL=CompositeTile.d.ts.map