import { BasicFieldEventMap, Event, PropertyChangeEvent, StringField, StringFieldFormat } from '../../../index';
export interface StringFieldSelectionChangeEvent<TStringField = StringField> extends Event<TStringField> {
    selectionStart: number;
    selectionEnd: number;
}
export interface StringFieldEventMap extends BasicFieldEventMap<string> {
    'action': Event<StringField>;
    'selectionChange': StringFieldSelectionChangeEvent;
    'propertyChange:format': PropertyChangeEvent<StringFieldFormat>;
    'propertyChange:hasAction': PropertyChangeEvent<boolean>;
    'propertyChange:inputMasked': PropertyChangeEvent<boolean>;
    'propertyChange:maxLength': PropertyChangeEvent<number>;
    'propertyChange:multilineText': PropertyChangeEvent<boolean>;
    'propertyChange:selectionEnd': PropertyChangeEvent<number>;
    'propertyChange:selectionStart': PropertyChangeEvent<number>;
    'propertyChange:selectionTrackingEnabled': PropertyChangeEvent<boolean>;
    'propertyChange:spellCheckEnabled': PropertyChangeEvent<boolean>;
    'propertyChange:trimText': PropertyChangeEvent<boolean>;
    'propertyChange:wrapText': PropertyChangeEvent<boolean>;
}
//# sourceMappingURL=StringFieldEventMap.d.ts.map