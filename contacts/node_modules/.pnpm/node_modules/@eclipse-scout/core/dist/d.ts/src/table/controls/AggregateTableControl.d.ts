import { EventHandler, InitModelOf, TableColumnMovedEvent, TableControl } from '../../index';
export declare class AggregateTableControl extends TableControl {
    aggregateRow: any[] & {
        selection?: boolean;
    };
    protected _tableDataScrollHandler: () => void;
    protected _tableColumnResizedHandler: () => void;
    protected _tableColumnMovedHandler: EventHandler<TableColumnMovedEvent>;
    protected _tableColumnStructureChangedHandler: () => void;
    protected _tableChangedHandler: () => void;
    protected _aggregationFunctionChangedHandler: () => void;
    constructor();
    static CONTAINER_ANIMATE_DURATION: number;
    protected _init(model: InitModelOf<this>): void;
    protected _destroy(): void;
    protected _render(): void;
    protected _renderContent($parent: JQuery): void;
    protected _removeContent(): void;
    protected _renderAggregate(): void;
    protected _rerenderAggregate(): void;
    protected _installCellTooltip($cell: JQuery): void;
    protected _aggregate(): void;
    protected _reconcileScrollPos(): void;
    protected _updateEnabledAndSelectedState(aggregationFunctionChanged?: boolean): void;
    protected _setEnabled(enabled: boolean): void;
    protected _setSelected(selected: boolean): void;
    protected _onTableDataScroll(): void;
    /**
     * Generic handler for various events
     */
    protected _onTableChanged(): void;
    protected _onAggregationFunctionChanged(): void;
    protected _onTableColumnResized(): void;
    protected _onTableColumnMoved(event: TableColumnMovedEvent): void;
    protected _onTableColumnStructureChanged(): void;
}
//# sourceMappingURL=AggregateTableControl.d.ts.map