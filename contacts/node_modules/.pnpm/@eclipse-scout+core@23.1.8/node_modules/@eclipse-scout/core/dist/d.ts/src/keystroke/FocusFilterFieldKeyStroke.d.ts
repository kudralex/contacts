/// <reference types="jquery" />
import { Key, KeyStroke, ScoutKeyboardEvent, Widget } from '../index';
import KeyboardEventBase = JQuery.KeyboardEventBase;
/**
 * Keystroke to move the cursor into filter field.
 *
 * Hint: This keystroke is not implemented as RangeKeyStroke.js because:
 *       a) the accepted keys are not rendered on F1, but a condensed 'a-z' instead;
 *       b) there is no need to evaluate a concrete key's propagation status when being rendered (because of (a))
 *
 */
export declare class FocusFilterFieldKeyStroke extends KeyStroke {
    virtualKeyStrokeWhich: string;
    constructor(field: Widget);
    /**
     * @override KeyStroke.js
     */
    protected _accept(event: ScoutKeyboardEvent & {
        _$filterInput?: JQuery<HTMLInputElement>;
    }): boolean;
    handle(event: KeyboardEventBase & {
        _$filterInput?: JQuery<HTMLInputElement>;
    }): void;
    /**
     * Returns a virtual key to represent this keystroke.
     */
    keys(): Key[];
    renderKeyBox($drawingArea: JQuery, event: ScoutKeyboardEvent & {
        _$filterInput?: JQuery<HTMLInputElement>;
    }): JQuery;
    protected _isKeyStrokeInRange(event: ScoutKeyboardEvent): boolean;
}
//# sourceMappingURL=FocusFilterFieldKeyStroke.d.ts.map