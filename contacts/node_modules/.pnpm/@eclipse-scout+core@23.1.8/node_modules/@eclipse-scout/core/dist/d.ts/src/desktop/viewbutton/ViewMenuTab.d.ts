import { Action, Desktop, EventHandler, InitModelOf, KeyStrokeContext, PropertyChangeEvent, ViewButton, ViewMenuPopup, ViewMenuTabEventMap, ViewMenuTabModel, Widget } from '../../index';
/**
 * Shows a list of view buttons with displayStyle=MENU
 * and shows the title of the active view button, if the view button is one
 * of the view buttons contained in the menu.
 */
export declare class ViewMenuTab extends Widget implements ViewMenuTabModel {
    model: ViewMenuTabModel;
    eventMap: ViewMenuTabEventMap;
    self: ViewMenuTab;
    selected: boolean;
    selectedButtonVisible: boolean;
    defaultIconId: string;
    viewButtons: ViewButton[];
    selectedButton: ViewButton;
    dropdown: Action;
    popup: ViewMenuPopup;
    desktopKeyStrokeContext: KeyStrokeContext;
    protected _desktopInBackgroundHandler: EventHandler<PropertyChangeEvent<boolean, Desktop>>;
    constructor();
    protected _init(model: InitModelOf<this>): void;
    protected _destroy(): void;
    protected _initKeyStrokeContext(): void;
    protected _render(): void;
    protected _remove(): void;
    protected _renderProperties(): void;
    setViewButtons(viewButtons: ViewButton[]): void;
    protected _setViewButtons(viewButtons: ViewButton[]): void;
    setSelectedButton(viewButton: ViewButton): void;
    protected _setSelectedButton(viewButton: ViewButton): void;
    protected _renderSelectedButton(): void;
    setSelectedButtonVisible(selectedButtonVisible: boolean): void;
    protected _renderSelectedButtonVisible(): void;
    setSelected(selected: boolean): void;
    protected _renderSelected(): void;
    protected _findSelectedViewButton(): ViewButton;
    /**
     * Toggles the 'view menu popup', or brings the outline content to the front if in background.
     */
    togglePopup(): void;
    protected _openPopup(): void;
    protected _closePopup(): void;
    protected _renderInBackground(): void;
    onViewButtonSelected(): void;
    protected _onDesktopInBackgroundChange(event: PropertyChangeEvent<boolean, Desktop>): void;
}
//# sourceMappingURL=ViewMenuTab.d.ts.map