import { AbstractLayout, Event, EventHandler, Form, FormTableControlEventMap, FormTableControlModel, InitModelOf, ObjectOrChildModel, TableControl } from '../../index';
export declare class FormTableControl extends TableControl implements FormTableControlModel {
    model: FormTableControlModel;
    eventMap: FormTableControlEventMap;
    self: FormTableControl;
    form: Form;
    protected _formDestroyedHandler: EventHandler<Event<Form>>;
    constructor();
    protected _init(model: InitModelOf<this>): void;
    protected _createLayout(): AbstractLayout;
    protected _renderContent($parent: JQuery): void;
    protected _removeContent(): void;
    protected _removeForm(): void;
    protected _renderForm(form: Form): void;
    /**
     * Returns true if the table control may be displayed (opened).
     */
    isContentAvailable(): boolean;
    setForm(form: ObjectOrChildModel<Form>): void;
    protected _setForm(form: Form): void;
    protected _adaptForm(form: Form): void;
    onControlContainerOpened(): void;
    protected _onFormDestroyed(event: Event<Form>): void;
}
//# sourceMappingURL=FormTableControl.d.ts.map