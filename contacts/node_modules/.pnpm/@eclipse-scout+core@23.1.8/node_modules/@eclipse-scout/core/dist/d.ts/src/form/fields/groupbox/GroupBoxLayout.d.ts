import { AbstractLayout, Dimension, EventHandler, GroupBox, HtmlComponent, HtmlCompPrefSizeOptions, HtmlEnvironment, PropertyChangeEvent } from '../../../index';
export declare class GroupBoxLayout extends AbstractLayout {
    groupBox: GroupBox;
    protected _htmlPropertyChangeHandler: EventHandler<PropertyChangeEvent<any, HtmlEnvironment>>;
    protected _statusWidth: number;
    constructor(groupBox: GroupBox);
    protected _initDefaults(): void;
    protected _onHtmlEnvironmentPropertyChange(): void;
    layout($container: JQuery): void;
    protected _updateMenuBar(htmlMenuBar: HtmlComponent, containerSize: Dimension, statusWidth: number): Dimension;
    protected _menuBarSize(htmlMenuBar: HtmlComponent, containerSize: Dimension, statusWidth: number): Dimension;
    protected _updateHeaderMenuBar(htmlMenuBar: HtmlComponent, $header: JQuery, $title: JQuery, statusWidth: number): Dimension;
    protected _$status(): JQuery;
    protected _layoutStatus(): void;
    preferredLayoutSize($container: JQuery, options?: HtmlCompPrefSizeOptions): Dimension;
    protected _headerHeight(): number;
    protected _notificationHeight(options?: HtmlCompPrefSizeOptions): number;
    /**
     * Return menu-bar when it exists and it is visible.
     */
    protected _htmlMenuBar(): HtmlComponent;
    protected _htmlGbBody(): HtmlComponent;
}
//# sourceMappingURL=GroupBoxLayout.d.ts.map