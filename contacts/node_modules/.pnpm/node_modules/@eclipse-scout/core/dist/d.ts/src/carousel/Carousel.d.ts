import { CarouselModel, GridData, HtmlComponent, InitModelOf, ObjectOrChildModel, Widget } from '../index';
export declare class Carousel extends Widget implements CarouselModel {
    model: CarouselModel;
    statusEnabled: boolean;
    statusItemHtml: string;
    gridData: GridData;
    moveThreshold: number;
    widgets: Widget[];
    currentItem: number;
    /**
     * last translation position
     */
    positionX: number;
    $carouselItems: JQuery[];
    $carouselStatusItems: JQuery[];
    $carouselFilmstrip: JQuery;
    /**
     * carousel status bar (containing current position)
     */
    $carouselStatus: JQuery;
    htmlCompFilmstrip: HtmlComponent;
    htmlCompStatus: HtmlComponent;
    constructor();
    protected _init(model: InitModelOf<this>): void;
    protected _setGridData(gridData: GridData): void;
    protected _render(): void;
    protected _remove(): void;
    protected _renderProperties(): void;
    setStatusEnabled(statusEnabled: boolean): void;
    protected _renderStatusEnabled(): void;
    protected _renderStatus(): void;
    protected _removeStatus(): void;
    protected _renderStatusItems(): void;
    protected _renderCurrentStatusItem(): void;
    recalcTransformation(): void;
    setCurrentItem(currentItem: number): void;
    protected _renderCurrentItem(): void;
    protected _renderItemsInternal(item: number, skipRemove: boolean): void;
    setWidgets(widgets: ObjectOrChildModel<Widget>[]): void;
    protected _renderWidgets(): void;
    protected _registerCarouselFilmstripEventListeners(): void;
}
//# sourceMappingURL=Carousel.d.ts.map