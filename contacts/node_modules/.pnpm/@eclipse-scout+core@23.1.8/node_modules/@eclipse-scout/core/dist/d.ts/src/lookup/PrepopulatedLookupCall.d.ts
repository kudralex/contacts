/// <reference types="jquery" />
import { LookupCall, LookupResult, LookupRow } from '../index';
import Deferred = JQuery.Deferred;
export declare class PrepopulatedLookupCall<TKey> extends LookupCall<TKey> {
    lookupRows: LookupRow<TKey>[];
    constructor();
    setLookupRows(lookupRows: LookupRow<TKey>[] | LookupRow<TKey>): void;
    protected _filterActiveLookupRow(lookupRow: LookupRow<TKey>): boolean;
    protected _getAll(): JQuery.Promise<LookupResult<TKey>>;
    protected _queryByAll(deferred: Deferred<LookupResult<TKey>>): void;
    protected _lookupRowsByAll(): LookupRow<TKey>[];
    protected _getByText(text: string): JQuery.Promise<LookupResult<TKey>>;
    protected _queryByText(deferred: Deferred<LookupResult<TKey>>, text: string): void;
    protected _lookupRowsByText(text: string): LookupRow<TKey>[];
    protected _getByKey(key: TKey): JQuery.Promise<LookupResult<TKey>>;
    protected _queryByKey(deferred: Deferred<LookupResult<TKey>>, key: TKey): void;
    protected _lookupRowByKey(key: TKey): LookupRow<TKey>;
    protected _getByRec(rec: TKey): JQuery.Promise<LookupResult<TKey>>;
    protected _queryByRec(deferred: Deferred<LookupResult<TKey>>, rec: TKey): void;
    protected _lookupRowsByRec(rec: TKey): LookupRow<TKey>[];
}
//# sourceMappingURL=PrepopulatedLookupCall.d.ts.map