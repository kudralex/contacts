import { DesktopBench, Event, Outline, OutlineContent, PropertyChangeEvent, WidgetEventMap } from '../../index';
export interface DesktopBenchEventMap extends WidgetEventMap {
    'viewActivate': DesktopBenchViewActivateEvent;
    'viewAdd': DesktopBenchViewAddEvent;
    'viewDeactivate': DesktopBenchViewDeactivateEvent;
    'viewRemove': DesktopBenchViewRemoveEvent;
    'propertyChange:navigationHandleVisible': PropertyChangeEvent<boolean>;
    'propertyChange:outline': PropertyChangeEvent<Outline>;
    'propertyChange:outlineContent': PropertyChangeEvent<OutlineContent>;
    'propertyChange:outlineContentVisible': PropertyChangeEvent<boolean>;
}
export interface DesktopBenchViewActivateEvent<D extends DesktopBench = DesktopBench> extends Event<D> {
    view: OutlineContent;
}
export interface DesktopBenchViewAddEvent<D extends DesktopBench = DesktopBench> extends Event<D> {
    view: OutlineContent;
}
export interface DesktopBenchViewDeactivateEvent<D extends DesktopBench = DesktopBench> extends Event<D> {
    view: OutlineContent;
}
export interface DesktopBenchViewRemoveEvent<D extends DesktopBench = DesktopBench> extends Event<D> {
    view: OutlineContent;
}
//# sourceMappingURL=DesktopBenchEventMap.d.ts.map