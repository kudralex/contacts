/// <reference types="jquery" />
import { LookupCall, LookupRow } from '../index';
export declare class HierarchicalLookupResultBuilder<TKey> {
    lookupCall: LookupCall<TKey>;
    protected _lookupRowMap: Record<PropertyKey, LookupRow<TKey>>;
    constructor(lookupCall: LookupCall<TKey>);
    /**
     * Load all parent nodes of the given lookup rows up to the root.
     */
    addParentLookupRows(lookupRows: LookupRow<TKey>[]): JQuery.Promise<LookupRow<TKey>[]>;
    protected _addParent(lookupRow: LookupRow<TKey>): JQuery.Promise<void>;
    protected _fillMap(lookupRows: LookupRow<TKey>[]): void;
    /**
     * Load all parent child of the given lookup rows.
     */
    addChildLookupRows(lookupRows: LookupRow<TKey>[]): JQuery.Promise<LookupRow<TKey>[]>;
    protected _addChildren(lookupRow: LookupRow<TKey>): JQuery.Promise<LookupRow<TKey>[]>;
}
//# sourceMappingURL=HierarchicalLookupResultBuilder.d.ts.map