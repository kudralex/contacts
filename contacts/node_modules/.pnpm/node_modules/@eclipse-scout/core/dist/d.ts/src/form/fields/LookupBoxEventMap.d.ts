import { Event, LookupBox, LookupCall, LookupResult, PropertyChangeEvent, Status, ValueFieldEventMap } from '../../index';
export interface LookupBoxLookupCallDoneEvent<TValue = any, T = LookupBox<TValue>> extends Event<T> {
    result: LookupResult<TValue>;
}
export interface LookupBoxPrepareLookupCallEvent<TValue = any, T = LookupBox<TValue>> extends Event<T> {
    lookupCall: LookupCall<TValue>;
}
export interface LookupBoxEventMap<TValue> extends ValueFieldEventMap<TValue[]> {
    'lookupCallDone': LookupBoxLookupCallDoneEvent<TValue>;
    'prepareLookupCall': LookupBoxPrepareLookupCallEvent<TValue>;
    'propertyChange:lookupCall': PropertyChangeEvent<LookupCall<TValue>>;
    'propertyChange:lookupStatus': PropertyChangeEvent<Status>;
}
//# sourceMappingURL=LookupBoxEventMap.d.ts.map